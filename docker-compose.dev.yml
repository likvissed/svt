version: "3.9"

x-app: &app
  build:
    context: .
    dockerfile: .docker/app/app.dev.Dockerfile
    args:
      RUBY_VERSION: 2.5.5
      BUNDLER_VERSION: 2.0.2
      NODE_MAJOR: 10
      YARN_VERSION: 1.22.5
      RAILS_ROOT: /app
  networks:
    - svt
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  volumes:
    - bundle:/usr/local/bundle
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment:
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
  stdin_open: true
  tty: true
  depends_on:
    # - mysql
    - redis
  env_file:
    - .env

services:
  runner:
    <<: *backend
    command: /bin/bash

  app:
    <<: *backend
    restart: unless-stopped
    command: bundle exec puma -C config/puma.rb

  nginx:
    image: nginx:1.19.6-alpine
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - type: bind
        source: ./
        target: /app
      - ./.docker/nginx/nginx.dev.conf:/etc/nginx/conf.d/nginx.dev.conf
      - ./.docker/tls/:/etc/pki/tls/nginx/
    stdin_open: true
    tty: true
    networks:
      - svt

  # mysql:
  #   image: mysql:5.7
  #   volumes:
  #     - mysql:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_DEV_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DEV_DATABASE}
  #     MYSQL_USER: ${MYSQL_DEV_USER}
  #     MYSQL_PASSWORD: ${MYSQL_DEV_PASSWORD}
  #   restart: always
  #   networks:
  #     - svt
  #   command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci

  # mysql-test:
  #   image: mysql:5.7
  #   volumes:
  #     - mysql-test:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "${MYSQL_TEST_ROOT_PASSWORD}"
  #     MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
  #     MYSQL_USER: ${MYSQL_TEST_USER}
  #     MYSQL_PASSWORD: ${MYSQL_TEST_PASSWORD}
  #   restart: always
  #   networks:
  #     - svt

  redis:
    image: redis:5.0.11
    volumes:
      - redis:/data
    restart: always
    networks:
      - svt

  sidekiq:
    <<: *backend
    restart: unless-stopped
    command: bundle exec sidekiq -C config/sidekiq.yml

  webpacker:
    <<: *app
    ports:
      - "3035:3035"
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    command: ./bin/webpack-dev-server

  guard:
    <<: *backend
    depends_on:
      - mysql-test
    command: bundle exec guard

volumes:
  bundle:
  rails_cache:
  node_modules:
  packs:
  # mysql:
  # mysql-test:
  redis:

networks:
  svt:
