upstream rails {
  server rails:3000;
}

upstream webpacker {
  server webpacker:3035;
}

server {
  listen 80;
  listen 443 ssl;

  server_name localhost localhost.***REMOVED***.ru;
  root /app/public;
  client_max_body_size 50M;

  ssl_certificate /etc/pki/tls/nginx/***REMOVED***.crt;
  ssl_certificate_key /etc/pki/tls/nginx/***REMOVED***.ru.key;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
  ssl_prefer_server_ciphers on;

  location ^~ /(assets|packs) {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location / {
    try_files $uri $uri/index.html $uri.html @rails;
  }

  location @rails {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;

    proxy_redirect off;
    proxy_pass http://rails;
  }

  location /sockjs-node {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_redirect off;
    proxy_pass http://webpacker;
  }

  location /cable {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection Upgrade;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;

    proxy_redirect off;
    proxy_pass http://rails;
  }


  if ($scheme = http) {
    rewrite ^ https://localhost.***REMOVED***.ru$request_uri permanent;
  }

  access_log /app/log/nginx_access.log;
  error_log /app/log/nginx_error.log;
}
